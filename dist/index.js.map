{"version":3,"sources":["../src/index.js"],"names":["availableSites","PornClient","ADAPTERS","map","a","DISPLAY_NAME","join","MANIFEST","name","id","Config","ID","version","pkg","description","resources","types","idPrefixes","catalogs","CATALOGS","contactEmail","EMAIL","logo","icon","background","behaviorHints","adult","makeResourceHandler","client","resourceName","args","response","invokeResource","err","console","error","chalk","gray","Date","toLocaleString","proxy","PROXY","cache","CACHE","addon","AddonBuilder","defineCatalogHandler","defineMetaHandler","defineStreamHandler","getInterface","middleware","httpHandler","req","res","STATIC_DIR","end","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA;AACA;AACA;AACA;AAEA,IAAIA,iBAAiBC,oBAAWC,QAAX,CAAoBC,GAApB,CAAyBC,CAAD,IAAOA,EAAEC,YAAjC,EAA+CC,IAA/C,CAAoD,IAApD,CAArB;;AAEA,MAAMC,WAAW;AACfC,QAAM,OADS;AAEfC,MAAIC,gBAAOC,EAFI;AAGfC,WAASC,iBAAID,OAHE;AAIfE,eAAc;;4CAE4Bd,cAAe;CAN1C;AAQfe,aAAW,CAAC,SAAD,EAAY,MAAZ,EAAoB,QAApB,CARI;AASfC,SAAO,CAAC,OAAD,EAAU,IAAV,CATQ;AAUfC,cAAY,CAAChB,oBAAWU,EAAZ,CAVG;AAWfO,YAAUjB,oBAAWkB,QAXN;AAYfC,gBAAcV,gBAAOW,KAZN;AAafC,QAAO,wDAbQ;AAcfC,QAAO,wDAdQ;AAefC,cAAa,wDAfE;AAgBfC,iBAAe;AAAEC,WAAO;AAAT;AAhBA,CAAjB;;AAmBA,SAASC,mBAAT,CAA6BC,MAA7B,EAAqCC,YAArC,EAAmD;AACjD;AAAA;AAAA;AAAA,mCAAO,WAAOC,IAAP,EAAgB;AACrB,YAAI;AACF,cAAIC,iBAAiBH,OAAOI,cAAP,CAAsBH,YAAtB,EAAoCC,IAApC,CAArB;AACA,iBAAOC,QAAP;AACD,SAHD,CAGE,OAAOE,GAAP,EAAY;AACZ;AACAC,kBAAQC,KAAR,EACE;AACAC,yBAAMC,IAAN,CAAW,IAAIC,IAAJ,GAAWC,cAAX,EAAX,IACA,0CADA,GAEC,4BAA2BV,YAAa,GAJ3C;AAMAK,kBAAQC,KAAR,CAAcL,IAAd;AACAI,kBAAQC,KAAR,CAAcF,GAAd;AACA;;AACA,gBAAMA,GAAN;AACD;AACF,OAjBD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBD;;AAED,IAAIL,SAAS,IAAI3B,mBAAJ,CAAe;AAAEuC,SAAO9B,gBAAO+B,KAAhB;AAAuBC,SAAOhC,gBAAOiC;AAArC,CAAf,CAAb;AACA,IAAIC,QAAQ,IAAIC,6BAAJ,CAAiBtC,QAAjB,EACTuC,oBADS,CACYnB,oBAAoBC,MAApB,EAA4B,SAA5B,CADZ,EAETmB,iBAFS,CAESpB,oBAAoBC,MAApB,EAA4B,MAA5B,CAFT,EAGToB,mBAHS,CAGWrB,oBAAoBC,MAApB,EAA4B,QAA5B,CAHX,EAITqB,YAJS,EAAZ;AAKA,IAAIC,aAAa,gCAAUN,KAAV,CAAjB;;AAEA,MAAMO,cAAc,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChC,4BAAY3C,gBAAO4C,UAAnB,EAA+BF,GAA/B,EAAoCC,GAApC,EAAyC,MAAM;AAC7CH,eAAWE,GAAX,EAAgBC,GAAhB,EAAqB,MAAMA,IAAIE,GAAJ,EAA3B;AACD,GAFD;AAGD,CAJD;;AAMAC,OAAOC,OAAP,GAAiBN,WAAjB","sourcesContent":["import { addonBuilder as AddonBuilder, getRouter, publishToCentral } from 'stremio-addon-sdk'\nimport serveStatic from 'serve-static'\nimport chalk from 'chalk'\nimport pkg from '../package.json'\nimport PornClient from './PornClient'\nimport Config from './config'\n\n// @TODO adapt methods (stream.find, meta.find, ...)\n// @TODO serveStatic not needed\n// @TODO search\n// @TODO landing\n\nlet availableSites = PornClient.ADAPTERS.map((a) => a.DISPLAY_NAME).join(', ')\n\nconst MANIFEST = {\n  name: 'Porn+',\n  id: Config.ID,\n  version: pkg.version,\n  description: `\\\nTime to unsheathe your sword! \\\nWatch porn videos and webcam streams from ${availableSites}\\\n`,\n  resources: ['catalog', 'meta', 'stream'],\n  types: ['movie', 'tv'],\n  idPrefixes: [PornClient.ID],\n  catalogs: PornClient.CATALOGS,\n  contactEmail: Config.EMAIL,\n  logo: `https://johnserv531.github.io/gh-images/1586345203.png`,\n  icon: `https://johnserv531.github.io/gh-images/1586345203.png`,\n  background: `https://johnserv531.github.io/gh-images/1586345196.jpg`,\n  behaviorHints: { adult: true },\n}\n\nfunction makeResourceHandler(client, resourceName) {\n  return async (args) => {\n    try {\n      let response = await client.invokeResource(resourceName, args)\n      return response\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.error(\n        // eslint-disable-next-line prefer-template\n        chalk.gray(new Date().toLocaleString()) +\n        ' An error has occurred while processing ' +\n        `the following request to ${resourceName}:`\n      )\n      console.error(args)\n      console.error(err)\n      /* eslint-enable no-console */\n      throw err\n    }\n  }\n}\n\nlet client = new PornClient({ proxy: Config.PROXY, cache: Config.CACHE })\nlet addon = new AddonBuilder(MANIFEST)\n  .defineCatalogHandler(makeResourceHandler(client, 'catalog'))\n  .defineMetaHandler(makeResourceHandler(client, 'meta'))\n  .defineStreamHandler(makeResourceHandler(client, 'stream'))\n  .getInterface()\nlet middleware = getRouter(addon)\n\nconst httpHandler = (req, res) => {\n  serveStatic(Config.STATIC_DIR)(req, res, () => {\n    middleware(req, res, () => res.end())\n  })\n}\n\nmodule.exports = httpHandler\n"],"file":"index.js"}