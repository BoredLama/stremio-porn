{"version":3,"sources":["../../src/adapters/PornHub.js"],"names":["androidUA","PornHub","HubTrafficAdapter","_makeMethodUrl","method","methodAliases","searchVideos","getVideoById","_makeEmbedUrl","id","_getStreams","type","fromUrl","body","httpClient","request","headers","regexp","urlMatches","exec","Error","url","replace","qualities","title","some","qual","includes"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA,MAAMA,YAAY,kJAAlB;;AAEA,MAAMC,OAAN,SAAsBC,0BAAtB,CAAwC;AAMtCC,iBAAeC,MAAf,EAAuB;AACrB,QAAIC,gBAAgB;AAClBC,oBAAc,QADI;AAElBC,oBAAc;AAFI,KAApB;AAIA,WAAQ,sCAAqCF,cAAcD,MAAd,CAAsB,EAAnE;AACD;;AAEDI,gBAAcC,EAAd,EAAkB;AAChB,WAAQ,iCAAgCA,EAAG,EAA3C;AACD;;AAEKC,aAAN,CAAkBC,IAAlB,EAAwBF,EAAxB,EAA4B;AAAA;;AAAA;AAC1B,YAAMG,UAAW,kDAAiDH,EAAG,EAArE,CAD0B,CAE1B;;AACA,UAAI;AAAEI;AAAF,gBAAiB,MAAKC,UAAL,CAAgBC,OAAhB,CAAwBH,OAAxB,EAAiC;AAAEI,iBAAS;AAAE,wBAAchB;AAAhB;AAAX,OAAjC,CAArB;AAEA;AACA;AACA;;AACA,UAAIiB,SAAS,yEAAb;AACA;;AACA,UAAIC,aAAaD,OAAOE,IAAP,CAAYN,IAAZ,CAAjB;;AAEA,UAAI,CAACK,UAAD,IAAe,CAACA,WAAW,CAAX,CAApB,EAAmC;AACjC,cAAM,IAAIE,KAAJ,CAAU,qDAAV,CAAN;AACD;;AAED,UAAIC,MAAMH,WAAW,CAAX,EACPI,OADO,CACC,SADD,EACY,GADZ,EACiB;AADjB,OAEPA,OAFO,CAEC,aAFD,EAEgB,KAFhB,CAAV,CAhB0B,CAkBO;;AAEjC,UAAID,IAAI,CAAJ,MAAW,GAAf,EAAoB;AAClBA,cAAO,UAASA,GAAI,EAApB;AACD;;AAED,YAAME,YAAY,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,CAAlB;AAEA,UAAIC,QAAQ,MAAZ;AAEAD,gBAAUE,IAAV,CAAeC,QAAQ;AACrB,YAAIL,IAAIM,QAAJ,CAAa,MAAID,IAAJ,GAAS,IAAtB,CAAJ,EAAiC;AAC/BF,kBAAQE,OAAO,GAAf;AACA,iBAAO,IAAP;AACD;AACF,OALD;AAOA,aAAO,CAAC;AAAEF,aAAF;AAASH;AAAT,OAAD,CAAP;AAnC0B;AAqC3B;;AAvDqC;;gEAAlCpB,O,kBACkB,S,qBACE,E,yBACI,I,aACZ,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,QAA3B,EAAqC,MAArC,EAA6C,QAA7C,EAAuD,YAAvD,EAAqE,MAArE,EAA6E,MAA7E,EAAqF,QAArF,EAA+F,KAA/F,C;;eAwDHA,O","sourcesContent":["import HubTrafficAdapter from './HubTrafficAdapter'\n\nconst androidUA = 'Mozilla/5.0 (Linux; Android 8.0.0; TA-1053 Build/OPR1.170623.026) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3368.0 Mobile Safari/537.36'\n\nclass PornHub extends HubTrafficAdapter {\n  static DISPLAY_NAME = 'PornHub'\n  static ITEMS_PER_PAGE = 30\n  static VIDEO_ID_PARAMETER = 'id'\n  static GENRES = ['milf', 'asian', 'ebony', 'latina', 'arab', 'hentai', 'babysitter', 'anal', 'orgy', 'public', 'gay']\n\n  _makeMethodUrl(method) {\n    let methodAliases = {\n      searchVideos: 'search',\n      getVideoById: 'video_by_id',\n    }\n    return `https://www.pornhub.com/webmasters/${methodAliases[method]}`\n  }\n\n  _makeEmbedUrl(id) {\n    return `https://www.pornhub.com/embed/${id}`\n  }\n\n  async _getStreams(type, id) {\n    const fromUrl = `https://www.pornhub.com/view_video.php?viewkey=${id}`\n    // android user agent results in a much smaller page size\n    let { body } = await this.httpClient.request(fromUrl, { headers: { 'user-agent': androidUA } })\n\n    /* eslint-disable max-len */\n    // URL example:\n    // https:\\/\\/cv.phncdn.com\\/videos\\/201812\\/18\\/197359631\\/720P_1500K_197359631.mp4?Y23fgPea7lt_eqyjC6ej2YRTuUjwKmPFjA-U1toa4MkKgg2SVYcgoTTgdQz_d7kk2u4H2BSlKqXZE0-58JT-5vafU_8jOlWSKy5B1eW-dSTc7c4Z7dh-rqaauQGs972zG_4dM_Spok3bt2AYBZLoHUu33u6y1jteum3AWT1mnpyhpmfcx8TFwK8arSVrj-2lD8Z9-1U5NmQ\n    let regexp = /videoUrl[\"']?\\s*:\\s*[\"']?(https?:\\\\?\\/\\\\?\\/[a-z]+\\.phncdn\\.com[^\"']+)/gi\n    /* eslint-enable max-len */\n    let urlMatches = regexp.exec(body)\n\n    if (!urlMatches || !urlMatches[1]) {\n      throw new Error('Unable to extract a stream URL from an android page')\n    }\n\n    let url = urlMatches[1]\n      .replace(/[\\\\/]+/g, '/') // Normalize the slashes...\n      .replace(/(https?:\\/)/, '$1/') // ...but keep the // after \"https:\"\n\n    if (url[0] === '/') {\n      url = `https:/${url}`\n    }\n\n    const qualities = ['1080', '720', '480', '360', '240']\n\n    let title = '480p'\n\n    qualities.some(qual => {\n      if (url.includes('/'+qual+'P_')) {\n        title = qual + 'p'\n        return true\n      }\n    })\n\n    return [{ title, url }]\n\n  }\n\n}\n\n\nexport default PornHub\n"],"file":"PornHub.js"}