{"version":3,"sources":["../../src/adapters/RedTube.js"],"names":["RedTube","HubTrafficAdapter","_makeMethodUrl","method","_makeEmbedUrl","id","_extractStreamsFromEmbed","body","regexp","urlMatches","exec","Error","url","replace","qualityMatch","match","quality","toLowerCase"],"mappings":";;;;;;;AAAA;;;;;;AAGA,MAAMA,OAAN,SAAsBC,0BAAtB,CAAwC;AAEN;AAIhCC,iBAAeC,MAAf,EAAuB;AACrB,WAAQ,+CAA8CA,MAAO,EAA7D;AACD;;AAEDC,gBAAcC,EAAd,EAAkB;AAChB,WAAQ,gCAA+BA,EAAG,EAA1C;AACD;;AAEDC,2BAAyBC,IAAzB,EAA+B;AAC7B;AACA;AACA;AACA,QAAIC,SAAS,2EAAb;AACA;;AACA,QAAIC,aAAaD,OAAOE,IAAP,CAAYH,IAAZ,CAAjB;;AAEA,QAAI,CAACE,UAAD,IAAe,CAACA,WAAW,CAAX,CAApB,EAAmC;AACjC,YAAM,IAAIE,KAAJ,CAAU,mDAAV,CAAN;AACD;;AAED,QAAIC,MAAMH,WAAW,CAAX,EACPI,OADO,CACC,SADD,EACY,GADZ,EACiB;AADjB,KAEPA,OAFO,CAEC,aAFD,EAEgB,KAFhB,CAAV,CAZ6B,CAcI;;AACjC,QAAIC,eAAeF,IAAIG,KAAJ,CAAU,WAAV,CAAnB;AACA,QAAIC,UAAUF,gBAAgBA,aAAa,CAAb,EAAgBG,WAAhB,EAA9B;;AAEA,QAAIL,IAAI,CAAJ,MAAW,GAAf,EAAoB;AAClBA,YAAO,UAASA,GAAI,EAApB;AACD;;AAED,WAAO,CAAC;AAAEA,SAAF;AAAOI;AAAP,KAAD,CAAP;AACD;;AArCqC;;gEAAlChB,O,kBACkB,S,mBACA,CAAC,OAAD,C,qBACE,E,aACR,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,EAA2B,QAA3B,EAAqC,MAArC,EAA6C,QAA7C,EAAuD,YAAvD,EAAqE,MAArE,EAA6E,MAA7E,EAAqF,QAArF,EAA+F,KAA/F,C;;eAqCHA,O","sourcesContent":["import HubTrafficAdapter from './HubTrafficAdapter'\n\n\nclass RedTube extends HubTrafficAdapter {\n  static DISPLAY_NAME = 'RedTube'\n  static TAGS_TO_SKIP = ['teens'] // For some reason Teens doesn't work properly\n  static ITEMS_PER_PAGE = 20\n  static GENRES = ['milf', 'asian', 'ebony', 'latina', 'arab', 'hentai', 'babysitter', 'anal', 'orgy', 'public', 'gay']\n\n  _makeMethodUrl(method) {\n    return `https://api.redtube.com?data=redtube.Videos.${method}`\n  }\n\n  _makeEmbedUrl(id) {\n    return `https://embed.redtube.com?id=${id}`\n  }\n\n  _extractStreamsFromEmbed(body) {\n    /* eslint-disable max-len */\n    // URL example:\n    // https://ce.rdtcdn.com/media/videos/201803/12/4930561/480P_600K_4930561.mp4?a5dcae8e1adc0bdaed975f0...\n    let regexp = /videoUrl[\"']?\\s*:\\s*[\"']?(https?:\\\\?\\/\\\\?\\/[a-z_-]+\\.rdtcdn\\.com[^\"']+)/gi\n    /* eslint-enable max-len */\n    let urlMatches = regexp.exec(body)\n\n    if (!urlMatches || !urlMatches[1]) {\n      throw new Error('Unable to extract a stream URL from an embed page')\n    }\n\n    let url = urlMatches[1]\n      .replace(/[\\\\/]+/g, '/') // Normalize the slashes...\n      .replace(/(https?:\\/)/, '$1/') // ...but keep the // after \"https:\"\n    let qualityMatch = url.match(/\\/(\\d+p)/i)\n    let quality = qualityMatch && qualityMatch[1].toLowerCase()\n\n    if (url[0] === '/') {\n      url = `https:/${url}`\n    }\n\n    return [{ url, quality }]\n  }\n}\n\n\nexport default RedTube\n"],"file":"RedTube.js"}